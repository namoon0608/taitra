import { useState } from "react";
import Head from "next/head";
import Nav from "../Components/Nav";
import Footer from "../Components/Footer";
import Hero from "../Components/Hero";
import styles from "../styles/Home.module.scss";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import { useTranslation } from "next-i18next";
import FormCard from "../Components/Stepper/FormCard";
import Basic from "../Components/Forms/Basic";
import Choose from "../Components/Forms/Choose";
import Write from "../Components/Forms/Write";
import Preview from "../Components/Forms/Preview";

export async function getServerSideProps({ locale }) {
    const options = {
        method: "POST",
        headers: {
            cookie: "ci_session=tm7raoegfru3cidh8r88ljnovjura42a",
            "Content-Type": "application/x-www-form-urlencoded",
        },
        body: new URLSearchParams({ lang: locale, show_id: "FD" }),
    };
    const res = await fetch(
        `${process.env.API_BASE_URL}getDiscountInfo`,
        options
    );
    const infoData = await res.json();

    //get參展商基本資料
    const company = {
        method: "POST",
        headers: {
            cookie: "ci_session=pp0k1v3sfrngvhrs9ait3hnqrbtmvssi",
            "Content-Type": "application/x-www-form-urlencoded",
        },
        body: new URLSearchParams({
            lang: locale,
            company_token:
                "340fe08039b249bdc86ee42def83f48fa59787addc23e7b30fd47b97a2960cd7",
            show_id: "FD",
        }),
    };
    const companyRes = await fetch(
        `${process.env.API_BASE_URL}getExhibitorCompany`,
        company
    ).then((response) => response.json());
    console.log(companyRes);
    //get申請流程
    const steps = {
        method: "POST",
        headers: {
            cookie: "ci_session=0sbjsvc6inuum4mm7h9tchklraa67mtt",
            "Content-Type": "application/x-www-form-urlencoded",
        },
        body: new URLSearchParams({
            lang: locale,
            company_token:
                "340fe08039b249bdc86ee42def83f48fa59787addc23e7b30fd47b97a2960cd7",
            show_id: "FD",
            application_form_id: "62fa00de13897001",
        }),
    };
    const stepOneRes = await fetch(
        `${process.env.API_BASE_URL}getDraftDataStep1`,
        steps
    ).then((response) => response.json());
    // console.log(stepOneRes);

    return {
        props: {
            ...(await serverSideTranslations(locale, ["common"])),
            info: infoData,
            company: companyRes,
            stepOne: stepOneRes,
        },
    };
}

export default function Apply(props) {
    const { t } = useTranslation();
    const [formStep, setFormStep] = useState(0);

    const nextFormStep = () => setFormStep((currentStep) => currentStep + 1);

    const prevFormStep = () => setFormStep((currentStep) => currentStep - 1);

    return (
        <div className={styles.container}>
            <Head>
                <title>TAITRA</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/img/logo.svg" />
            </Head>

            <Nav />
            <Hero info={props.info}>
                <FormCard currentStep={formStep} prevFormStep={prevFormStep}>
                    {formStep >= 0 && (
                        <Basic
                            formStep={formStep}
                            nextFormStep={nextFormStep}
                            stepOne={props.stepOne}
                            company={props.company}
                        />
                    )}
                    {formStep >= 1 && (
                        <Choose
                            formStep={formStep}
                            nextFormStep={nextFormStep}
                        />
                    )}
                    {formStep >= 2 && (
                        <Write
                            formStep={formStep}
                            nextFormStep={nextFormStep}
                        />
                    )}

                    {formStep > 2 && <Preview />}
                </FormCard>
            </Hero>
            <Footer />
        </div>
    );
}
