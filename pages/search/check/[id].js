import Head from "next/head";
import Nav from "../../../Components/Nav";
import Footer from "../../../Components/Footer";
import Hero from "../../../Components/Hero";
import styles from "../../../styles/Apply.module.scss";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import { useTranslation } from "next-i18next";
import { setCookie, getCookie } from "cookies-next";

export async function getServerSideProps({ locale, query, req, res }) {
    let oldCookie = getCookie("sid", { req, res });
    if (query.sid !== undefined) {
        if (query.sid !== oldCookie) {
            setCookie("sid", query.sid, { req, res, maxAge: 60 * 6 * 24 });
        } else if (query.sid === getCookie("sid", { req, res })) {
            oldCookie = oldCookie;
        }
    } else if (query.sid === undefined || query.sid === "") {
        if (oldCookie !== undefined || oldCookie !== "") {
            oldCookie = oldCookie;
        }
        if (oldCookie === undefined) {
            return {
                redirect: {
                    destination: "https://twtc.com.tw/",
                },
            };
        }
    }
    const form = new URLSearchParams();
    form.append("sid", getCookie("sid", { req, res }));

    const sidForm = {
        method: "POST",
    };
    sidForm.body = form;

    const sidData = await fetch(`${process.env.API_BASE_URL}sso`, sidForm).then(
        (response) => response.json()
    );

    const options = {
        method: "POST",
        headers: {
            "Content-Type": "application/x-www-form-urlencoded",
        },
        body: new URLSearchParams({
            lang: locale,
            event_uid: sidData.event_uid,
            company_id: sidData.company_id,
        }),
    };

    const infoRes = await fetch(
        `${process.env.API_BASE_URL}getDiscountInfo`,
        options
    );
    const infoData = await infoRes.json();

    options.body.append("application_form_id", `${query.id}`);

    const viewData = await fetch(
        `${process.env.API_BASE_URL}viewApply`,
        options
    ).then((response) => response.json());

    return {
        props: {
            ...(await serverSideTranslations(locale, ["common"])),
            info: infoData,
            data: viewData,
            sidData: sidData,
        },
    };
}

export default function Check(props) {
    const { t } = useTranslation();
    return (
        <div className={styles.container}>
            <Head>
                <title>TAITRA</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/img/logo.svg" />
            </Head>

            <Nav />
            <Hero info={props.info}>
                <h3>{t("search.check")}</h3>
                <div className={styles.checkForm}>
                    <h2>{t("search.option")}</h2>
                    <p className={styles.opinionBox}>
                        {props.data.comment.hydro_comment}
                    </p>
                    <h2>{t("applyForm.stepOne.groupTwo.title")}</h2>
                    <div className={styles.formComplete}>
                        <div className={styles.formRow}>
                            <label>
                                {t("applyForm.stepOne.groupTwo.companyName")}
                            </label>
                            <p>{props.data.proxy.proxy_company_name}</p>
                        </div>
                        <div className={styles.formRow}>
                            <label>
                                {t("applyForm.stepOne.groupTwo.taxID")}
                            </label>
                            <p>{props.data.proxy.proxy_tax_id}</p>
                        </div>
                        <div className={styles.formRow}>
                            <label>
                                {t("applyForm.stepOne.groupTwo.contactPerson")}
                            </label>
                            <p>{props.data.proxy.proxy_contact_person}</p>
                        </div>
                        <div className={styles.formRow}>
                            <label>
                                {t("applyForm.stepOne.groupTwo.phone")}
                            </label>
                            <p>{props.data.proxy.proxy_phone}</p>
                        </div>
                        <div className={styles.formRow}>
                            <label>E-mail</label>
                            <p>{props.data.proxy.proxy_email}</p>
                        </div>
                    </div>
                    <h2>{t("applyForm.stepOne.groupThree.title")}</h2>
                    <div className={styles.formCompleteInvoce}>
                        <div className={styles.formRow}>
                            <label>
                                {t("applyForm.stepOne.groupTwo.companyName")}
                            </label>
                            <p>{props.data.invoice.invoice_comapny}</p>
                        </div>
                        <div className={styles.formRow}>
                            <label>
                                {t("applyForm.stepOne.groupTwo.taxID")}
                            </label>
                            <p>{props.data.invoice.invoice_taxid}</p>
                        </div>
                        <div className={styles.formRow}>
                            <label>
                                {t(
                                    "applyForm.stepOne.groupThree.invoiceAddress"
                                )}
                            </label>
                            <p>{props.data.invoice.invoice_address}</p>
                        </div>
                        <div className={styles.formRow}>
                            <label>
                                {t("applyForm.stepOne.groupThree.remark")}ï¼š
                            </label>
                            <p>{props.data.invoice.remark}</p>
                        </div>
                    </div>
                    <h2>{t("applyForm.stepTwo.title")}</h2>
                    <div className={styles.applyItem}>
                        {props.data.hydro_items.base_option === "Y" ? (
                            <div>
                                {t("applyForm.preview.groupThree.useDefault")}
                            </div>
                        ) : (
                            <>
                                {props.data.hydro_items.items.length !== 0 ? (
                                    <table>
                                        <thead>
                                            <tr className={styles.title}>
                                                <th>
                                                    {t(
                                                        "applyForm.preview.groupThree.no"
                                                    )}
                                                </th>
                                                <th>
                                                    {t(
                                                        "applyForm.preview.groupThree.item"
                                                    )}
                                                </th>
                                                <th>
                                                    {t(
                                                        "applyForm.preview.groupThree.quantity"
                                                    )}
                                                </th>
                                                <th>
                                                    {t(
                                                        "applyForm.preview.groupThree.unitPrice"
                                                    )}
                                                </th>
                                                <th>
                                                    {t(
                                                        "applyForm.preview.groupThree.itemCost"
                                                    )}
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            {props.data.hydro_items.items.map(
                                                (item, idx) => (
                                                    <tr
                                                        className={
                                                            styles.content
                                                        }
                                                        key={item.idx}
                                                    >
                                                        <td>{item.index}</td>
                                                        <td
                                                            style={{
                                                                textAlign:
                                                                    "left",
                                                                paddingLeft:
                                                                    "15px",
                                                            }}
                                                        >
                                                            {item.name}
                                                        </td>
                                                        <td>{item.quantity}</td>
                                                        <td>{item.price}</td>
                                                        <td>{item.sum}</td>
                                                    </tr>
                                                )
                                            )}
                                            <tr className={styles.sum}>
                                                <td className={styles.sumTitle}>
                                                    {t(
                                                        "applyForm.preview.groupThree.total"
                                                    )}
                                                </td>
                                                <td>
                                                    {
                                                        props.data.hydro_items
                                                            .total_sum
                                                    }
                                                </td>
                                            </tr>
                                            {props.data.discount
                                                .discount_value !== "" ? (
                                                <>
                                                    <tr className={styles.sum}>
                                                        <td></td>
                                                        <td></td>
                                                        <td></td>
                                                        <td
                                                            className={
                                                                styles.sumTitle
                                                            }
                                                        >
                                                            {
                                                                props.data
                                                                    .discount
                                                                    .discount_type
                                                            }
                                                        </td>
                                                        <td>
                                                            {
                                                                props.data
                                                                    .discount
                                                                    .discount_price
                                                            }
                                                        </td>
                                                    </tr>
                                                    <tr className={styles.sum}>
                                                        <td></td>
                                                        <td></td>
                                                        <td></td>
                                                        <td
                                                            className={
                                                                styles.sumTitle
                                                            }
                                                        >
                                                            ç¸½åƒ¹
                                                        </td>
                                                        <td>
                                                            {
                                                                props.data
                                                                    .discount
                                                                    .finally_sum
                                                            }
                                                        </td>
                                                    </tr>
                                                </>
                                            ) : null}
                                        </tbody>
                                    </table>
                                ) : (
                                    <div>æ²’æœ‰è¿½åŠ é …ç›®</div>
                                )}
                            </>
                        )}
                    </div>
                    <h2>{t("applyForm.preview.groupFour.title")}</h2>
                    {props.data.diagram_img_file !== "Y" ? (
                        <div className={styles.image}>
                            <p>
                                {t("applyForm.preview.groupFour.file")}{" "}
                                <span>{props.data.diagram_img_file}</span>
                            </p>
                            <img
                                src={
                                    process.env.imgKey + props.data.diagram_img
                                }
                            />
                        </div>
                    ) : (
                        <div>{t("applyForm.preview.groupFour.pending")}</div>
                    )}
                </div>
            </Hero>
            <Footer />
        </div>
    );
}
